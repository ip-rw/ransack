// Code generated by entc, DO NOT EDIT.

package ip

const (
	// Label holds the string label denoting the ip type in the database.
	Label = "ip"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "ip"
	// FieldNet holds the string denoting the net field in the database.
	FieldNet = "net"
	// FieldMask holds the string denoting the mask field in the database.
	FieldMask = "mask"
	// EdgeMachine holds the string denoting the machine edge name in mutations.
	EdgeMachine = "machine"
	// Table holds the table name of the ip in the database.
	Table = "ips"
	// MachineTable is the table the holds the machine relation/edge.
	MachineTable = "ips"
	// MachineInverseTable is the table name for the Machine entity.
	// It exists in this package in order to avoid circular dependency with the "machine" package.
	MachineInverseTable = "machines"
	// MachineColumn is the table column denoting the machine relation/edge.
	MachineColumn = "ip_machine"
)

// Columns holds all SQL columns for ip fields.
var Columns = []string{
	FieldID,
	FieldIP,
	FieldNet,
	FieldMask,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "ips"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"ip_machine",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultMask holds the default value on creation for the "mask" field.
	DefaultMask int
)
