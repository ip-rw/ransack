// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/ip-rw/ransack/ent/ip"
	"github.com/ip-rw/ransack/ent/machine"
	"github.com/ip-rw/ransack/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	ipFields := schema.IP{}.Fields()
	_ = ipFields
	// ipDescMask is the schema descriptor for mask field.
	ipDescMask := ipFields[2].Descriptor()
	// ip.DefaultMask holds the default value on creation for the mask field.
	ip.DefaultMask = ipDescMask.Default.(int)
	machineFields := schema.Machine{}.Fields()
	_ = machineFields
	// machineDescHwid is the schema descriptor for hwid field.
	machineDescHwid := machineFields[0].Descriptor()
	// machine.HwidValidator is a validator for the "hwid" field. It is called by the builders before save.
	machine.HwidValidator = machineDescHwid.Validators[0].(func(string) error)
	// machineDescHostname is the schema descriptor for hostname field.
	machineDescHostname := machineFields[1].Descriptor()
	// machine.HostnameValidator is a validator for the "hostname" field. It is called by the builders before save.
	machine.HostnameValidator = machineDescHostname.Validators[0].(func(string) error)
	// machineDescFingerprint is the schema descriptor for fingerprint field.
	machineDescFingerprint := machineFields[2].Descriptor()
	// machine.FingerprintValidator is a validator for the "fingerprint" field. It is called by the builders before save.
	machine.FingerprintValidator = machineDescFingerprint.Validators[0].(func(string) error)
}
